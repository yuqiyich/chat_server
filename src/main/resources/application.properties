###static下的静态文件可访问
spring.mvc.static-path-pattern=/**

### 指定api返回中文不乱码
spring.http.encoding.charset=UTF-8
spring.http.encoding.force=true
spring.http.encoding.enabled=true

spring.resources.static-locations=classpath:/templates/,classpath:/static/



###DATASOURCE
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://10.3.0.21:63306/ruqi_mobile_manager?autoReconnect=true&failOverReadOnly=false&maxReconnects=10&characterEncoding=utf-8&useSSL=true&serverTimezone=GMT%2B8&allowMultiQueries=true
spring.datasource.username=gac_travel_test
spring.jackson.time-zone=GMT+8
spring.datasource.password=gac@6666

server.port=8080
server.servlet.context-path=/manager

spring.application.name=gaia_server
management.endpoints.web.exposure.include=*
management.metrics.tags.application=${spring.application.name}


##DATASOURCE(yuqi localhost)
# spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
# spring.datasource.url=jdbc:mysql://localhost:3306/ruqi_mobile_manager
# spring.datasource.username=root
# spring.datasource.password=12345678

###MyBatis
mybatis.typeAliasesPackage=com.ruqi.appserver.ruqi.dao.entity
mybatis.mapperLocations=classpath:/mappers/*.xml
# mybatis.configLocation=classpath:/mybatis-config.xml

## REDIS (RedisProperties 测试配置)
spring.redis.host=10.3.0.43
spring.redis.password=crs-9sm36iev:gac@6666
spring.redis.port=6379

#ES
# 集群名称
spring.data.elasticsearch.cluster-name=elasticsearch_zhangyu
# 自己的ip地址
spring.data.elasticsearch.cluster-nodes=localhost:9300

###日志配置
logging.file.name=gaia.log

spring.profiles.active=@profiles.active@

#============== kafka ===================
# 指定kafka 代理地址，可以多个
# 10.0.2.34:9092 开发环境elk的kafka
spring.kafka.bootstrap-servers=10.0.2.34:9092

#=============== provider  =======================

spring.kafka.producer.retries=0
# 每次批量发送消息的数量
spring.kafka.producer.batchSize=16384
spring.kafka.producer.bufferMemory=33554432

# 指定消息key和消息体的编解码方式
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

#=============== consumer  =======================
# 指定默认消费者group id
spring.kafka.consumer.group-id=consumer-group-test

spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.enable-auto-commit=true
spring.kafka.consumer.auto-commit-interval=100

# 指定消息key和消息体的编解码方式
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer

spring.kafka.listener.missing-topics-fatal=false


